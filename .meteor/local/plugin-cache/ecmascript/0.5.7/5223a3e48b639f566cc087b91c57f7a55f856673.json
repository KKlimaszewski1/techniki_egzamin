{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/collections/Zadania.js","filenameRelative":"/collections/Zadania.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/collections/Zadania.js.map","sourceFileName":"/collections/Zadania.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"Zadania"},"ignored":false,"code":"Zadania = new Mongo.Collection('zadania');\n\nZadania.allow({\n  insert: function () {\n    function insert(userId, doc) {\n      return !!userId;\n    }\n\n    return insert;\n  }(),\n  update: function () {\n    function update(userId, doc) {\n      return !!userId;\n    }\n\n    return update;\n  }()\n});\n\nCzynnosc = new SimpleSchema({\n  nazwa: {\n    type: String\n  },\n  opis: {\n    type: String\n  }\n});\n\nZadanieSchema = new SimpleSchema({\n  nazwa: {\n    type: String,\n    label: \"Nazwa\"\n  },\n  opis: {\n    type: String,\n    label: \"Opis\"\n  },\n  czynnosci: {\n    type: [Czynnosc]\n  },\n  wLiscieZadan: {\n    type: Boolean,\n    defaultValue: false,\n    optional: true,\n    autoform: {\n      type: \"hidden\"\n    }\n  },\n  zadaniaWykonane: {\n    type: Boolean,\n    defaultValue: true,\n    optional: false,\n    autoform: {\n      type: \"hidden\"\n    }\n  },\n  autor: {\n    type: String,\n    label: \"Autor\",\n    autoValue: function () {\n      function autoValue() {\n        return this.userId;\n      }\n\n      return autoValue;\n    }(),\n    autoform: {\n      type: \"hidden\"\n    }\n  },\n  createAt: {\n    type: Date,\n    label: \"Created At\",\n    autoValue: function () {\n      function autoValue() {\n        return new Date();\n      }\n\n      return autoValue;\n    }(),\n    autoform: {\n      type: \"hidden\"\n    }\n  }\n});\n\nMeteor.methods({\n  toggleListaZadan: function () {\n    function toggleListaZadan(id, currentState) {\n      Zadania.update(id, {\n        $set: {\n          wLiscieZadan: !currentState\n        }\n      });\n    }\n\n    return toggleListaZadan;\n  }(),\n  // Meteor.methods({\n  //   toggleZadaniaWykonane: function(id, currentState){\n  //     Zadania.update(id, {\n  //       $set: {\n  //         zadaniaWykonane: !currentState\n  //       }\n  //     });\n  //   },\n  deleteZadanie: function () {\n    function deleteZadanie(id) {\n      Zadania.remove(id);\n    }\n\n    return deleteZadanie;\n  }()\n});\n\nZadania.attachSchema(ZadanieSchema);","ast":null,"map":{"version":3,"sources":["/collections/Zadania.js"],"names":[],"mappings":"AAAA,UAAU,IAAI,MAAM,UAAV,CAAqB,SAArB,CAAV;;AAEA,QAAQ,KAAR,CAAc;AACZ;AAAQ,oBAAS,MAAT,EAAiB,GAAjB,EAAqB;AAC3B,aAAO,CAAC,CAAC,MAAT;AACD;;AAFD;AAAA,KADY;AAIZ;AAAQ,oBAAS,MAAT,EAAiB,GAAjB,EAAqB;AAC3B,aAAO,CAAC,CAAC,MAAT;AACD;;AAFD;AAAA;AAJY,CAAd;;AASA,WAAW,IAAI,YAAJ,CAAiB;AAC1B,SAAO;AACL,UAAM;AADD,GADmB;AAI1B,QAAM;AACJ,UAAM;AADF;AAJoB,CAAjB,CAAX;;AASA,gBAAgB,IAAI,YAAJ,CAAiB;AAC/B,SAAO;AACL,UAAM,MADD;AAEL,WAAO;AAFF,GADwB;AAK/B,QAAM;AACJ,UAAM,MADF;AAEJ,WAAO;AAFH,GALyB;AAS/B,aAAW;AACT,UAAM,CAAC,QAAD;AADG,GAToB;AAY/B,gBAAc;AACZ,UAAM,OADM;AAEZ,kBAAc,KAFF;AAGZ,cAAU,IAHE;AAIZ,cAAU;AACR,YAAM;AADE;AAJE,GAZiB;AAoB/B,mBAAiB;AACf,UAAM,OADS;AAEf,kBAAc,IAFC;AAGf,cAAU,KAHK;AAIf,cAAU;AACR,YAAM;AADE;AAJK,GApBc;AA4B/B,SAAO;AACL,UAAM,MADD;AAEL,WAAO,OAFF;AAGL;AAAW,2BAAU;AACnB,eAAO,KAAK,MAAZ;AACD;;AAFD;AAAA,OAHK;AAML,cAAU;AACR,YAAM;AADE;AANL,GA5BwB;AAsC/B,YAAU;AACR,UAAM,IADE;AAER,WAAO,YAFC;AAGR;AAAW,2BAAU;AACnB,eAAO,IAAI,IAAJ,EAAP;AACD;;AAFD;AAAA,OAHQ;AAMR,cAAU;AACR,YAAM;AADE;AANF;AAtCqB,CAAjB,CAAhB;;AAkDA,OAAO,OAAP,CAAe;AACb;AAAkB,8BAAS,EAAT,EAAa,YAAb,EAA0B;AAC1C,cAAQ,MAAR,CAAe,EAAf,EAAmB;AACjB,cAAM;AACJ,wBAAc,CAAC;AADX;AADW,OAAnB;AAKD;;AAND;AAAA,KADa;;;;;;;;;AAgBb;AAAe,2BAAS,EAAT,EAAY;AACzB,cAAQ,MAAR,CAAe,EAAf;AACD;;AAFD;AAAA;AAhBa,CAAf;;AAqBA,QAAQ,YAAR,CAAsB,aAAtB","file":"/collections/Zadania.js.map","sourcesContent":["Zadania = new Mongo.Collection('zadania');\n\nZadania.allow({\n  insert: function(userId, doc){\n    return !!userId;\n  },\n  update: function(userId, doc){\n    return !!userId;\n  }\n});\n\nCzynnosc = new SimpleSchema({\n  nazwa: {\n    type: String\n  },\n  opis: {\n    type: String\n  }\n});\n\nZadanieSchema = new SimpleSchema({\n  nazwa: {\n    type: String,\n    label: \"Nazwa\"\n  },\n  opis: {\n    type: String,\n    label: \"Opis\"\n  },\n  czynnosci: {\n    type: [Czynnosc]\n  },\n  wLiscieZadan: {\n    type: Boolean,\n    defaultValue: false,\n    optional: true,\n    autoform: {\n      type: \"hidden\"\n    }\n  },\n  zadaniaWykonane: {\n    type: Boolean,\n    defaultValue: true,\n    optional: false,\n    autoform: {\n      type: \"hidden\"\n    }\n  },\n  autor: {\n    type: String,\n    label: \"Autor\",\n    autoValue: function(){\n      return this.userId\n    },\n    autoform: {\n      type: \"hidden\"\n    }\n  },\n  createAt: {\n    type: Date,\n    label: \"Created At\",\n    autoValue: function(){\n      return new Date()\n    },\n    autoform: {\n      type: \"hidden\"\n    }\n  }\n});\n\nMeteor.methods({\n  toggleListaZadan: function(id, currentState){\n    Zadania.update(id, {\n      $set: {\n        wLiscieZadan: !currentState\n      }\n    });\n  },\n  // Meteor.methods({\n  //   toggleZadaniaWykonane: function(id, currentState){\n  //     Zadania.update(id, {\n  //       $set: {\n  //         zadaniaWykonane: !currentState\n  //       }\n  //     });\n  //   },\n  deleteZadanie: function(id){\n    Zadania.remove(id);\n  }\n});\n\nZadania.attachSchema( ZadanieSchema );\n"]},"hash":"5223a3e48b639f566cc087b91c57f7a55f856673"}
