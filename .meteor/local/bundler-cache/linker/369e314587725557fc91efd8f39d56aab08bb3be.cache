[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nlodash = Package['erasaur:meteor-lodash'].lodash;\n_ = Package.underscore._;\nSpiderable = Package.spiderable.Spiderable;\nHelpers = Package['raix:handlebar-helpers'].Helpers;\nActiveRoute = Package['zimme:active-route'].ActiveRoute;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nCollection2 = Package['aldeed:collection2-core'].Collection2;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"lib\":{\"routes.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// lib/routes.js                                                            //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nFlowRouter.route('/', {                                                     // 1\n  name: 'home',                                                             // 2\n  action: function action() {                                               // 3\n    BlazeLayout.render('HomeLayout');                                       // 4\n  }                                                                         // 5\n});                                                                         // 1\n                                                                            //\nFlowRouter.route('/recipe-book', {                                          // 8\n  name: 'recipe-book',                                                      // 9\n  action: function action() {                                               // 10\n    BlazeLayout.render('MainLayout', { main: 'Recipes' });                  // 11\n  }                                                                         // 12\n});                                                                         // 8\n//////////////////////////////////////////////////////////////////////////////\n\n}},\"collections\":{\"Recipes.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// collections/Recipes.js                                                   //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nRecipes = new Mongo.Collection('recipes');                                  // 1\n                                                                            //\nRecipes.allow({                                                             // 3\n  insert: function insert(userId, doc) {                                    // 4\n    return !!userId;                                                        // 5\n  }                                                                         // 6\n});                                                                         // 3\n                                                                            //\nIngredient = new SimpleSchema({                                             // 9\n  name: {                                                                   // 10\n    type: String                                                            // 11\n  },                                                                        // 10\n  amount: {                                                                 // 13\n    type: String                                                            // 14\n  }                                                                         // 13\n});                                                                         // 9\n                                                                            //\nRecipeSchema = new SimpleSchema({                                           // 22\n  name: {                                                                   // 23\n    type: String,                                                           // 24\n    label: \"Name\"                                                           // 25\n  },                                                                        // 23\n  desc: {                                                                   // 27\n    type: String,                                                           // 28\n    label: \"Description\"                                                    // 29\n  },                                                                        // 27\n  author: {                                                                 // 31\n    type: String,                                                           // 32\n    label: \"Author\",                                                        // 33\n    autoValue: function autoValue() {                                       // 34\n      return this.userId;                                                   // 35\n    },                                                                      // 36\n    autoform: {                                                             // 37\n      type: \"hidden\"                                                        // 38\n    }                                                                       // 37\n  },                                                                        // 31\n  createAt: {                                                               // 41\n    type: Date,                                                             // 42\n    label: \"Created At\",                                                    // 43\n    autoValue: function autoValue() {                                       // 44\n      return new Date();                                                    // 45\n    },                                                                      // 46\n    autoform: {                                                             // 47\n      type: \"hidden\"                                                        // 48\n    }                                                                       // 47\n  }                                                                         // 41\n});                                                                         // 22\n                                                                            //\nRecipes.attachSchema(RecipeSchema);                                         // 53\n//////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"init.js\":[\"meteor/meteor\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// server/init.js                                                           //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nvar Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});\n                                                                            //\nMeteor.startup(function () {                                                // 3\n  // code to run on server at startup                                       //\n});                                                                         // 5\n//////////////////////////////////////////////////////////////////////////////\n\n}],\"publish.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// server/publish.js                                                        //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nMeteor.publish('recipes', function () {                                     // 1\n  return Recipes.find({ author: this.userId });                             // 2\n});                                                                         // 3\n//////////////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./lib/routes.js\");\nrequire(\"./collections/Recipes.js\");\nrequire(\"./server/init.js\");\nrequire(\"./server/publish.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/lib/routes.js","/collections/Recipes.js","/server/init.js","/server/publish.js"],"names":[],"mappings":";;;;;;;;AAAA,WAAW,KAAX,CAAiB,GAAjB,EAAsB;AACpB,QAAM,MADc;AAEpB,QAFoB,oBAEZ;AACN,gBAAY,MAAZ,CAAmB,YAAnB;AACD;AAJmB,CAAtB;;AAOA,WAAW,KAAX,CAAiB,cAAjB,EAAiC;AAC/B,QAAM,aADyB;AAE/B,QAF+B,oBAEtB;AACP,gBAAY,MAAZ,CAAmB,YAAnB,EAAiC,EAAC,MAAM,SAAP,EAAjC;AACD;AAJ8B,CAAjC,+E;;;;;;;;;;;ACPA,UAAU,IAAI,MAAM,UAAV,CAAqB,SAArB,CAAV;;AAEA,QAAQ,KAAR,CAAc;AACZ,UAAQ,gBAAS,MAAT,EAAiB,GAAjB,EAAqB;AAC3B,WAAO,CAAC,CAAC,MAAT;AACD;AAHW,CAAd;;AAMA,aAAa,IAAI,YAAJ,CAAiB;AAC5B,QAAM;AACJ,UAAM;AADF,GADsB;AAI5B,UAAQ;AACN,UAAM;AADA;AAJoB,CAAjB,CAAb;;AAaA,eAAe,IAAI,YAAJ,CAAiB;AAC9B,QAAM;AACJ,UAAM,MADF;AAEJ,WAAO;AAFH,GADwB;AAK9B,QAAM;AACJ,UAAM,MADF;AAEJ,WAAO;AAFH,GALwB;AAS9B,UAAQ;AACN,UAAM,MADA;AAEN,WAAO,QAFD;AAGN,eAAW,qBAAU;AACnB,aAAO,KAAK,MAAZ;AACD,KALK;AAMN,cAAU;AACR,YAAM;AADE;AANJ,GATsB;AAmB9B,YAAU;AACR,UAAM,IADE;AAER,WAAO,YAFC;AAGR,eAAW,qBAAU;AACnB,aAAO,IAAI,IAAJ,EAAP;AACD,KALO;AAMR,cAAU;AACR,YAAM;AADE;AANF;AAnBoB,CAAjB,CAAf;;AA+BA,QAAQ,YAAR,CAAsB,YAAtB,gD;;;;;;;;;;;ACpDA,SAAS,MAAT,QAAuB,eAAvB;;AAEA,OAAO,OAAP,CAAe,YAAM;;AAEpB,CAFD,+E;;;;;;;;;;;ACFA,OAAO,OAAP,CAAe,SAAf,EAA0B,YAAU;AAClC,SAAO,QAAQ,IAAR,CAAa,EAAC,QAAQ,KAAK,MAAd,EAAb,CAAP;AACD,CAFD,+E","file":"/app.js","sourcesContent":["FlowRouter.route('/', {\n  name: 'home',\n  action(){\n    BlazeLayout.render('HomeLayout');\n  }\n});\n\nFlowRouter.route('/recipe-book', {\n  name: 'recipe-book',\n  action (){\n    BlazeLayout.render('MainLayout', {main: 'Recipes'});\n  }\n});\n","Recipes = new Mongo.Collection('recipes');\n\nRecipes.allow({\n  insert: function(userId, doc){\n    return !!userId;\n  }\n});\n\nIngredient = new SimpleSchema({\n  name: {\n    type: String\n  },\n  amount: {\n    type: String\n  }\n});\n\n\n\n\n\nRecipeSchema = new SimpleSchema({\n  name: {\n    type: String,\n    label: \"Name\"\n  },\n  desc: {\n    type: String,\n    label: \"Description\"\n  },\n  author: {\n    type: String,\n    label: \"Author\",\n    autoValue: function(){\n      return this.userId\n    },\n    autoform: {\n      type: \"hidden\"\n    }\n  },\n  createAt: {\n    type: Date,\n    label: \"Created At\",\n    autoValue: function(){\n      return new Date()\n    },\n    autoform: {\n      type: \"hidden\"\n    }\n  }\n});\n\nRecipes.attachSchema( RecipeSchema );\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n","Meteor.publish('recipes', function(){\n  return Recipes.find({author: this.userId});\n});\n"]}}]