[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nlodash = Package['erasaur:meteor-lodash'].lodash;\n_ = Package.underscore._;\nSpiderable = Package.spiderable.Spiderable;\nHelpers = Package['raix:handlebar-helpers'].Helpers;\nActiveRoute = Package['zimme:active-route'].ActiveRoute;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nCollection2 = Package['aldeed:collection2-core'].Collection2;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"lib\":{\"routes.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// lib/routes.js                                                            //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nif (Meteor.isClient) {                                                      // 1\n  Accounts.onLogin(function () {                                            // 2\n    FlowRouter.go('recipe-book');                                           // 3\n  });                                                                       // 4\n                                                                            //\n  Accounts.onLogout(function () {                                           // 6\n    FlowRouter.go('home');                                                  // 7\n  });                                                                       // 8\n}                                                                           // 9\n                                                                            //\nFlowRouter.triggers.enter([function (context, redirect) {                   // 11\n  if (!Meteor.userId()) {                                                   // 12\n    FlowRouter.go('home');                                                  // 13\n  }                                                                         // 14\n}]);                                                                        // 15\n                                                                            //\nFlowRouter.route('/', {                                                     // 17\n  name: 'home',                                                             // 18\n  action: function action() {                                               // 19\n    if (Meteor.userId()) {                                                  // 20\n      FlowRouter.go('recipe-book');                                         // 21\n    }                                                                       // 22\n    BlazeLayout.render('HomeLayout');                                       // 23\n  }                                                                         // 24\n});                                                                         // 17\n                                                                            //\nFlowRouter.route('/recipe-book', {                                          // 27\n  name: 'recipe-book',                                                      // 28\n  action: function action() {                                               // 29\n    BlazeLayout.render('MainLayout', { main: 'Recipes' });                  // 30\n  }                                                                         // 31\n});                                                                         // 27\n                                                                            //\nFlowRouter.route('/recipe/:id', {                                           // 34\n  name: 'recipe',                                                           // 35\n  action: function action() {                                               // 36\n    BlazeLayout.render('MainLayout', { main: 'RecipeSingle' });             // 37\n  }                                                                         // 38\n});                                                                         // 34\n//////////////////////////////////////////////////////////////////////////////\n\n}},\"collections\":{\"Recipes.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// collections/Recipes.js                                                   //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nRecipes = new Mongo.Collection('recipes');                                  // 1\n                                                                            //\nRecipes.allow({                                                             // 3\n  insert: function insert(userId, doc) {                                    // 4\n    return !!userId;                                                        // 5\n  },                                                                        // 6\n  update: function update(userId, doc) {                                    // 7\n    return !!userId;                                                        // 8\n  }                                                                         // 9\n});                                                                         // 3\n                                                                            //\nIngredient = new SimpleSchema({                                             // 12\n  name: {                                                                   // 13\n    type: String                                                            // 14\n  },                                                                        // 13\n  amount: {                                                                 // 16\n    type: String                                                            // 17\n  }                                                                         // 16\n});                                                                         // 12\n                                                                            //\nRecipeSchema = new SimpleSchema({                                           // 21\n  name: {                                                                   // 22\n    type: String,                                                           // 23\n    label: \"Name\"                                                           // 24\n  },                                                                        // 22\n  desc: {                                                                   // 26\n    type: String,                                                           // 27\n    label: \"Description\"                                                    // 28\n  },                                                                        // 26\n  ingredients: {                                                            // 30\n    type: [Ingredient]                                                      // 31\n  },                                                                        // 30\n  inMenu: {                                                                 // 33\n    type: Boolean,                                                          // 34\n    defaultValue: false,                                                    // 35\n    optional: true,                                                         // 36\n    autoform: {                                                             // 37\n      type: \"hidden\"                                                        // 38\n    }                                                                       // 37\n  },                                                                        // 33\n  author: {                                                                 // 41\n    type: String,                                                           // 42\n    label: \"Author\",                                                        // 43\n    autoValue: function autoValue() {                                       // 44\n      return this.userId;                                                   // 45\n    },                                                                      // 46\n    autoform: {                                                             // 47\n      type: \"hidden\"                                                        // 48\n    }                                                                       // 47\n  },                                                                        // 41\n  createAt: {                                                               // 51\n    type: Date,                                                             // 52\n    label: \"Created At\",                                                    // 53\n    autoValue: function autoValue() {                                       // 54\n      return new Date();                                                    // 55\n    },                                                                      // 56\n    autoform: {                                                             // 57\n      type: \"hidden\"                                                        // 58\n    }                                                                       // 57\n  }                                                                         // 51\n});                                                                         // 21\n                                                                            //\nRecipes.attachSchema(RecipeSchema);                                         // 65\n//////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"init.js\":[\"meteor/meteor\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// server/init.js                                                           //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nvar Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});\n                                                                            //\nMeteor.startup(function () {});                                             // 3\n//////////////////////////////////////////////////////////////////////////////\n\n}],\"publish.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// server/publish.js                                                        //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nMeteor.publish('recipes', function () {                                     // 1\n  return Recipes.find({ author: this.userId });                             // 2\n});                                                                         // 3\n                                                                            //\nMeteor.publish('singleRecipe', function (id) {                              // 5\n  check(id, String);                                                        // 6\n  return Recipes.find({ _id: id });                                         // 7\n});                                                                         // 8\n//////////////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./lib/routes.js\");\nrequire(\"./collections/Recipes.js\");\nrequire(\"./server/init.js\");\nrequire(\"./server/publish.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/lib/routes.js","/collections/Recipes.js","/server/init.js","/server/publish.js"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,OAAO,QAAX,EAAoB;AAClB,WAAS,OAAT,CAAiB,YAAU;AACzB,eAAW,EAAX,CAAc,aAAd;AACD,GAFD;;AAIA,WAAS,QAAT,CAAkB,YAAU;AAC1B,eAAW,EAAX,CAAc,MAAd;AACD,GAFD;AAGD;;AAED,WAAW,QAAX,CAAoB,KAApB,CAA0B,CAAC,UAAS,OAAT,EAAkB,QAAlB,EAA2B;AACpD,MAAG,CAAC,OAAO,MAAP,EAAJ,EAAoB;AAClB,eAAW,EAAX,CAAc,MAAd;AACD;AACF,CAJyB,CAA1B;;AAMA,WAAW,KAAX,CAAiB,GAAjB,EAAsB;AACpB,QAAM,MADc;AAEpB,QAFoB,oBAEZ;AACN,QAAG,OAAO,MAAP,EAAH,EAAmB;AACjB,iBAAW,EAAX,CAAc,aAAd;AACD;AACD,gBAAY,MAAZ,CAAmB,YAAnB;AACD;AAPmB,CAAtB;;AAUA,WAAW,KAAX,CAAiB,cAAjB,EAAiC;AAC/B,QAAM,aADyB;AAE/B,QAF+B,oBAEtB;AACP,gBAAY,MAAZ,CAAmB,YAAnB,EAAiC,EAAC,MAAM,SAAP,EAAjC;AACD;AAJ8B,CAAjC;;AAOA,WAAW,KAAX,CAAiB,aAAjB,EAAgC;AAC9B,QAAM,QADwB;AAE9B,QAF8B,oBAErB;AACP,gBAAY,MAAZ,CAAmB,YAAnB,EAAiC,EAAC,MAAM,cAAP,EAAjC;AACD;AAJ6B,CAAhC,gF;;;;;;;;;;;ACjCA,UAAU,IAAI,MAAM,UAAV,CAAqB,SAArB,CAAV;;AAEA,QAAQ,KAAR,CAAc;AACZ,UAAQ,gBAAS,MAAT,EAAiB,GAAjB,EAAqB;AAC3B,WAAO,CAAC,CAAC,MAAT;AACD,GAHW;AAIZ,UAAQ,gBAAS,MAAT,EAAiB,GAAjB,EAAqB;AAC3B,WAAO,CAAC,CAAC,MAAT;AACD;AANW,CAAd;;AASA,aAAa,IAAI,YAAJ,CAAiB;AAC5B,QAAM;AACJ,UAAM;AADF,GADsB;AAI5B,UAAQ;AACN,UAAM;AADA;AAJoB,CAAjB,CAAb;;AASA,eAAe,IAAI,YAAJ,CAAiB;AAC9B,QAAM;AACJ,UAAM,MADF;AAEJ,WAAO;AAFH,GADwB;AAK9B,QAAM;AACJ,UAAM,MADF;AAEJ,WAAO;AAFH,GALwB;AAS9B,eAAa;AACX,UAAM,CAAC,UAAD;AADK,GATiB;AAY9B,UAAQ;AACN,UAAM,OADA;AAEN,kBAAc,KAFR;AAGN,cAAU,IAHJ;AAIN,cAAU;AACR,YAAM;AADE;AAJJ,GAZsB;AAoB9B,UAAQ;AACN,UAAM,MADA;AAEN,WAAO,QAFD;AAGN,eAAW,qBAAU;AACnB,aAAO,KAAK,MAAZ;AACD,KALK;AAMN,cAAU;AACR,YAAM;AADE;AANJ,GApBsB;AA8B9B,YAAU;AACR,UAAM,IADE;AAER,WAAO,YAFC;AAGR,eAAW,qBAAU;AACnB,aAAO,IAAI,IAAJ,EAAP;AACD,KALO;AAMR,cAAU;AACR,YAAM;AADE;AANF;AA9BoB,CAAjB,CAAf;;AA4CA,QAAQ,YAAR,CAAsB,YAAtB,gD;;;;;;;;;;;AChEA,SAAS,MAAT,QAAuB,eAAvB;;AAEA,OAAO,OAAP,CAAe,YAAW,CAEzB,CAFD,mD;;;;;;;;;;;ACFA,OAAO,OAAP,CAAe,SAAf,EAA0B,YAAU;AAClC,SAAO,QAAQ,IAAR,CAAa,EAAC,QAAQ,KAAK,MAAd,EAAb,CAAP;AACD,CAFD;;AAIA,OAAO,OAAP,CAAe,cAAf,EAA+B,UAAS,EAAT,EAAY;AACzC,QAAM,EAAN,EAAU,MAAV;AACA,SAAO,QAAQ,IAAR,CAAa,EAAC,KAAK,EAAN,EAAb,CAAP;AACD,CAHD,+E","file":"/app.js","sourcesContent":["if (Meteor.isClient){\n  Accounts.onLogin(function(){\n    FlowRouter.go('recipe-book');\n  });\n\n  Accounts.onLogout(function(){\n    FlowRouter.go('home');\n  });\n}\n\nFlowRouter.triggers.enter([function(context, redirect){\n  if(!Meteor.userId()){\n    FlowRouter.go('home');\n  }\n}]);\n\nFlowRouter.route('/', {\n  name: 'home',\n  action(){\n    if(Meteor.userId()){\n      FlowRouter.go('recipe-book')\n    }\n    BlazeLayout.render('HomeLayout');\n  }\n});\n\nFlowRouter.route('/recipe-book', {\n  name: 'recipe-book',\n  action (){\n    BlazeLayout.render('MainLayout', {main: 'Recipes'});\n  }\n});\n\nFlowRouter.route('/recipe/:id', {\n  name: 'recipe',\n  action (){\n    BlazeLayout.render('MainLayout', {main: 'RecipeSingle'});\n  }\n});\n","Recipes = new Mongo.Collection('recipes');\n\nRecipes.allow({\n  insert: function(userId, doc){\n    return !!userId;\n  },\n  update: function(userId, doc){\n    return !!userId;\n  }\n});\n\nIngredient = new SimpleSchema({\n  name: {\n    type: String\n  },\n  amount: {\n    type: String\n  }\n});\n\nRecipeSchema = new SimpleSchema({\n  name: {\n    type: String,\n    label: \"Name\"\n  },\n  desc: {\n    type: String,\n    label: \"Description\"\n  },\n  ingredients: {\n    type: [Ingredient]\n  },\n  inMenu: {\n    type: Boolean,\n    defaultValue: false,\n    optional: true,\n    autoform: {\n      type: \"hidden\"\n    }\n  },\n  author: {\n    type: String,\n    label: \"Author\",\n    autoValue: function(){\n      return this.userId\n    },\n    autoform: {\n      type: \"hidden\"\n    }\n  },\n  createAt: {\n    type: Date,\n    label: \"Created At\",\n    autoValue: function(){\n      return new Date()\n    },\n    autoform: {\n      type: \"hidden\"\n    }\n  }\n});\n\n\n\nRecipes.attachSchema( RecipeSchema );\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(function() {\n\n});\n","Meteor.publish('recipes', function(){\n  return Recipes.find({author: this.userId});\n});\n\nMeteor.publish('singleRecipe', function(id){\n  check(id, String);\n  return Recipes.find({_id: id});\n});\n"]}}]