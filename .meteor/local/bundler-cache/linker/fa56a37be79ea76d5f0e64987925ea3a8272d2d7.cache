[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nlodash = Package['erasaur:meteor-lodash'].lodash;\n_ = Package.underscore._;\nSpiderable = Package.spiderable.Spiderable;\nHelpers = Package['raix:handlebar-helpers'].Helpers;\nActiveRoute = Package['zimme:active-route'].ActiveRoute;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nCollection2 = Package['aldeed:collection2-core'].Collection2;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"lib\":{\"routes.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// lib/routes.js                                                            //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nif (Meteor.isClient) {                                                      // 1\n  Accounts.onLogin(function () {                                            // 2\n    FlowRouter.go('ksiazka-zadan');                                         // 3\n  });                                                                       // 4\n                                                                            //\n  Accounts.onLogout(function () {                                           // 6\n    FlowRouter.go('home');                                                  // 7\n  });                                                                       // 8\n}                                                                           // 9\n                                                                            //\nFlowRouter.triggers.enter([function (context, redirect) {                   // 11\n  if (!Meteor.userId()) {                                                   // 12\n    FlowRouter.go('home');                                                  // 13\n  }                                                                         // 14\n}]);                                                                        // 15\n                                                                            //\nFlowRouter.route('/', {                                                     // 17\n  name: 'home',                                                             // 18\n  action: function action() {                                               // 19\n    if (Meteor.userId()) {                                                  // 20\n      FlowRouter.go('ksiazka-zadan');                                       // 21\n    }                                                                       // 22\n    BlazeLayout.render('HomeLayout');                                       // 23\n  }                                                                         // 24\n});                                                                         // 17\n                                                                            //\nFlowRouter.route('/ksiazka-zadan', {                                        // 27\n  name: 'ksiazka-zadan',                                                    // 28\n  action: function action() {                                               // 29\n    BlazeLayout.render('MainLayout', { main: 'Zadania' });                  // 30\n  }                                                                         // 31\n});                                                                         // 27\n                                                                            //\nFlowRouter.route('/zadanie/:id', {                                          // 34\n  name: 'zadanie',                                                          // 35\n  action: function action() {                                               // 36\n    BlazeLayout.render('MainLayout', { main: 'PojedynczeZadanie' });        // 37\n  }                                                                         // 38\n});                                                                         // 34\n                                                                            //\nFlowRouter.route('/zadania-na-dzis', {                                      // 41\n  name: 'zadania-na-dzis',                                                  // 42\n  action: function action() {                                               // 43\n    BlazeLayout.render('MainLayout', { main: 'ZadaniaNaDzis' });            // 44\n  }                                                                         // 45\n});                                                                         // 41\n                                                                            //\nFlowRouter.route('/lista-czynnosci', {                                      // 48\n  name: 'lista-czynnosci',                                                  // 49\n  action: function action() {                                               // 50\n    BlazeLayout.render('MainLayout', { main: 'ListaCzynnosci' });           // 51\n  }                                                                         // 52\n});                                                                         // 48\n//////////////////////////////////////////////////////////////////////////////\n\n}},\"collections\":{\"Zadania.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// collections/Zadania.js                                                   //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nZadania = new Mongo.Collection('zadania');                                  // 1\n                                                                            //\nZadania.allow({                                                             // 3\n  insert: function insert(userId, doc) {                                    // 4\n    return !!userId;                                                        // 5\n  },                                                                        // 6\n  update: function update(userId, doc) {                                    // 7\n    return !!userId;                                                        // 8\n  }                                                                         // 9\n});                                                                         // 3\n                                                                            //\nCzynnosc = new SimpleSchema({                                               // 12\n  nazwa: {                                                                  // 13\n    type: String                                                            // 14\n  },                                                                        // 13\n  opis: {                                                                   // 16\n    type: String                                                            // 17\n  }                                                                         // 16\n});                                                                         // 12\n                                                                            //\nZadanieSchema = new SimpleSchema({                                          // 21\n  nazwa: {                                                                  // 22\n    type: String,                                                           // 23\n    label: \"Nazwa\"                                                          // 24\n  },                                                                        // 22\n  opis: {                                                                   // 26\n    type: String,                                                           // 27\n    label: \"Opis\"                                                           // 28\n  },                                                                        // 26\n  czynnosci: {                                                              // 30\n    type: [Czynnosc]                                                        // 31\n  },                                                                        // 30\n  wLiscieZadan: {                                                           // 33\n    type: Boolean,                                                          // 34\n    defaultValue: false,                                                    // 35\n    optional: true,                                                         // 36\n    autoform: {                                                             // 37\n      type: \"hidden\"                                                        // 38\n    }                                                                       // 37\n  },                                                                        // 33\n  autor: {                                                                  // 41\n    type: String,                                                           // 42\n    label: \"Autor\",                                                         // 43\n    autoValue: function autoValue() {                                       // 44\n      return this.userId;                                                   // 45\n    },                                                                      // 46\n    autoform: {                                                             // 47\n      type: \"hidden\"                                                        // 48\n    }                                                                       // 47\n  },                                                                        // 41\n  createAt: {                                                               // 51\n    type: Date,                                                             // 52\n    label: \"Created At\",                                                    // 53\n    autoValue: function autoValue() {                                       // 54\n      return new Date();                                                    // 55\n    },                                                                      // 56\n    autoform: {                                                             // 57\n      type: \"hidden\"                                                        // 58\n    }                                                                       // 57\n  }                                                                         // 51\n});                                                                         // 21\n                                                                            //\nMeteor.methods({                                                            // 63\n  toggleListaZadan: function toggleListaZadan(id, currentState) {           // 64\n    Zadania.update(id, {                                                    // 65\n      $set: {                                                               // 66\n        wLiscieZadan: !currentState                                         // 67\n      }                                                                     // 66\n    });                                                                     // 65\n  },                                                                        // 70\n  deleteZadanie: function deleteZadanie(id) {                               // 71\n    Zadania.remove(id);                                                     // 72\n  }                                                                         // 73\n});                                                                         // 63\n                                                                            //\nZadania.attachSchema(ZadanieSchema);                                        // 76\n//////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"init.js\":[\"meteor/meteor\",function(require,exports,module){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// server/init.js                                                           //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nvar Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});\n                                                                            //\nMeteor.startup(function () {});                                             // 3\n//////////////////////////////////////////////////////////////////////////////\n\n}],\"publish.js\":function(){\n\n//////////////////////////////////////////////////////////////////////////////\n//                                                                          //\n// server/publish.js                                                        //\n//                                                                          //\n//////////////////////////////////////////////////////////////////////////////\n                                                                            //\nMeteor.publish('zadania', function () {                                     // 1\n  return Zadania.find({ autor: this.userId });                              // 2\n});                                                                         // 3\n                                                                            //\nMeteor.publish('pojedynczeZadanie', function (id) {                         // 5\n  check(id, String);                                                        // 6\n  return Zadania.find({ _id: id });                                         // 7\n});                                                                         // 8\n//////////////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./lib/routes.js\");\nrequire(\"./collections/Zadania.js\");\nrequire(\"./server/init.js\");\nrequire(\"./server/publish.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/lib/routes.js","/collections/Zadania.js","/server/init.js","/server/publish.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["if (Meteor.isClient){\n  Accounts.onLogin(function(){\n    FlowRouter.go('ksiazka-zadan');\n  });\n\n  Accounts.onLogout(function(){\n    FlowRouter.go('home');\n  });\n}\n\nFlowRouter.triggers.enter([function(context, redirect){\n  if(!Meteor.userId()){\n    FlowRouter.go('home');\n  }\n}]);\n\nFlowRouter.route('/', {\n  name: 'home',\n  action(){\n    if(Meteor.userId()){\n      FlowRouter.go('ksiazka-zadan')\n    }\n    BlazeLayout.render('HomeLayout');\n  }\n});\n\nFlowRouter.route('/ksiazka-zadan', {\n  name: 'ksiazka-zadan',\n  action (){\n    BlazeLayout.render('MainLayout', {main: 'Zadania'});\n  }\n});\n\nFlowRouter.route('/zadanie/:id', {\n  name: 'zadanie',\n  action (){\n    BlazeLayout.render('MainLayout', {main: 'PojedynczeZadanie'});\n  }\n});\n\nFlowRouter.route('/zadania-na-dzis', {\n  name: 'zadania-na-dzis',\n  action(){\n    BlazeLayout.render('MainLayout', {main: 'ZadaniaNaDzis'});\n  }\n});\n\nFlowRouter.route('/lista-czynnosci', {\n  name: 'lista-czynnosci',\n  action(){\n    BlazeLayout.render('MainLayout', {main: 'ListaCzynnosci'});\n  }\n});\n","Zadania = new Mongo.Collection('zadania');\n\nZadania.allow({\n  insert: function(userId, doc){\n    return !!userId;\n  },\n  update: function(userId, doc){\n    return !!userId;\n  }\n});\n\nCzynnosc = new SimpleSchema({\n  nazwa: {\n    type: String\n  },\n  opis: {\n    type: String\n  }\n});\n\nZadanieSchema = new SimpleSchema({\n  nazwa: {\n    type: String,\n    label: \"Nazwa\"\n  },\n  opis: {\n    type: String,\n    label: \"Opis\"\n  },\n  czynnosci: {\n    type: [Czynnosc]\n  },\n  wLiscieZadan: {\n    type: Boolean,\n    defaultValue: false,\n    optional: true,\n    autoform: {\n      type: \"hidden\"\n    }\n  },\n  autor: {\n    type: String,\n    label: \"Autor\",\n    autoValue: function(){\n      return this.userId\n    },\n    autoform: {\n      type: \"hidden\"\n    }\n  },\n  createAt: {\n    type: Date,\n    label: \"Created At\",\n    autoValue: function(){\n      return new Date()\n    },\n    autoform: {\n      type: \"hidden\"\n    }\n  }\n});\n\nMeteor.methods({\n  toggleListaZadan: function(id, currentState){\n    Zadania.update(id, {\n      $set: {\n        wLiscieZadan: !currentState\n      }\n    });\n  },\n  deleteZadanie: function(id){\n    Zadania.remove(id);\n  }\n});\n\nZadania.attachSchema( ZadanieSchema );\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(function() {\n\n});\n","Meteor.publish('zadania', function(){\n  return Zadania.find({autor: this.userId});\n});\n\nMeteor.publish('pojedynczeZadanie', function(id){\n  check(id, String);\n  return Zadania.find({_id: id});\n});\n"]}}]